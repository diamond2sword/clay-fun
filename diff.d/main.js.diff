111a112
> 		case 'int32_t': return 4;
139a141
> 		case 'int32_t': return { value: memoryDataView.getUint32(address, true), __size: 4 };
188c190,192
< 		if (event.touches.length === 1) {
---
> 		if (event.touches.length === 1)
> 		{
> 			window.touchDown = true;
200d203
< 		window.touchDown = true;
204c207,210
< 	document.addEventListener("touchmove", handleTouch);
---
> 	document.addEventListener("touchmove", (event) => {
> 		if (event.scale !== 1) event.preventDefault();
> 		handleTouch(event);
> 	}, {passive: false});
208a215
> 		window.touchStart = true;
210c217,218
< 	});	
---
> 		event.preventDefault();
> 	}, {passive: false});
214c222,223
< 	});
---
> 		event.preventDefault();
> 	}, {passive: false});
217c226
< 		alert("touchcancel");
---
> 		window.pointerCancel = true;
242a252,255
> 	
> 	document.addEventListener("mousecancel", (event) => {
> 		window.pointerCancel = true;
> 	});
310,311c323,324
< 	let capacity = memoryDataView.getUint32(scratchSpaceAddress, true);
< 	let length = memoryDataView.getUint32(scratchSpaceAddress + 4, true);
---
> 	let capacity = memoryDataView.getInt32(scratchSpaceAddress, true);
> 	let length = memoryDataView.getInt32(scratchSpaceAddress + 4, true);
377c390
< 		switch(renderCommand.commandType.value) {
---
> 		switch(renderCommand.commandType.value & 0xff) {
522c535
< 	instance.exports.UpdateDrawFrame(scratchSpaceAddress, window.innerWidth, window.innerHeight, 0, 0, window.mousePositionXThisFrame, window.mousePositionYThisFrame, window.touchDown, window.mouseDown, 0, 0, window.dKeyPressedThisFrame, currentTime, deltaTime);
---
> 	instance.exports.UpdateDrawFrame(scratchSpaceAddress, window.innerWidth, window.innerHeight, 0, 0, window.mousePositionXThisFrame, window.mousePositionYThisFrame, window.touchDown, window.mouseDown, window.touchStart, window.pointerCancel, 0, 0, window.dKeyPressedThisFrame, currentTime, deltaTime);
529a543,544
> 	window.pointerCancel = false;
> 	window.touchStart = false;
